Pesquisar: Seaborn, Pandas, Matplot lib

Pesquisar como criar gráficos com esses libs
	Gráficos de: Histograma, boxplot, dispersão, barras, linhas


Pesquisar: Pypi.org; site oficial para bibliotecas python

Termos comuns:

Media, Mediana, Moda.

count,min, max : Estatiticas descritivas

Anotações:

	Quartil: Uma fração de quatro partes
	Interquartil = 25% 50% 75%
	Normalização = Passar os dados para a mesma escala (type)

Aula:30/04.

- Nota media por curso 
- Quantidade de Aluno homens e mulheres por curso
- Nota  media dos homens das mulheres
- Media de semestre por cursos
- Idade media por curso
- Media de idade por semestre

Aula:05/05

 - Dados:
	Poucos nulos - excluir(pode ser deletado nos dados)
	Outliers - Mediana(calcular a mediana desses dados)[caso tem muitos valores nulos]
	Distribuição normal - Media 
	Variaves Categoricas - Moda

Aula:07/05

	Minhas Anotações:
mapeamento_genero = {'Masculino': 0, 'Feminino': 1, 'Outro': 2}
mapeamento_uf = {'BA': 10, 'RS': 11, 'SC': 12, 'DF': 13, 'PE': 14, 'PR': 15, 'CE': 16, 'RJ': 17, 'SP': 18, 'MG': 19}
mapeamento_formação = {'Tecnólogo':20,'Ensino Médio':21,'Graduação':22,'Mestrado':23,'Doutorado':24,'Não informado':25,}
mapeamento_area_atuação = {'Tecnologia':30,'Recursos Humanos':31,'Administração':32,'Financeiro':33,'Marketing':34,'Educação ':35,'Engenharia ':36,'Saúde':37,'Não informado':38,}
mapeamento_idioma = {'Nenhum':40,'Alemão':41,'Francês':42,'Inglês':43,'Espanhol':44}

# Converter 'genero'
df['genero_int'] = df['genero'].map(mapeamento_genero)
df['genero_int'] = df['genero_int'].astype('int64')

df['formação_int'] = df['formação'].map(mapeamento_formação)
df['formação_int'] = df['formação_int'].astype('int64')

df['area_atuação_int'] = df['area_atuação'].map(mapeamento_area_atuação)
df['area_atuação_int'] = df['area_atuação_int'].astype('int64')

df['idioma_int'] = df['idioma'].map(mapeamento_idioma)
df['idioma_int'] = df['idioma_int'].astype('int64')

# Converter 'uf' com tratamento para valores não encontrados
def converter_uf(uf):
    return mapeamento_uf.get(uf, -1) # Retorna -1 para UFs não mapeadas

df['uf_int'] = df['uf'].apply(converter_uf).astype('int64')

	Relatorio:

	Analise e
Nos data set 'candidatos_tecnologia' foi reconhecido que há:1000 entries, com 17 colunas,
Tendo 10(object),6(float) e 1(int64). Alem disso, os nomes das series de cada dataset nao estao normalizados,
será necessario tratamento e há datas em formato de object que será necessario tratamento.

Feito o grafico da uf foi visto que a mais candidatos da bahia e menos gente de minas gerais 
No grafico de Idioma Há mais candidatos que fala nenhum idioma estrageiro, em seguida gente que fala,
Alemão, Francês, Inglês e Espanhol respectivamente.
Candidatos Masculino, Feminino e outros estao equilibrados, majoritariamente ha mais homens.
Em Status de Contraração, 72.4% dos candidatos não foram contratados, e 27.6% são contratados.
Há somente 5% dos candidatos são PCD.
Em Formação, 21.6% são Tecnólogo,20.3% cursou o Ensino Medio,19.9% são Graduados, 19.4% Mestrado e 18.8% tem Doutorado.
Na area de atuação há mais candidatos atuando na area de tecnologia, menos em Saúde e cercade 290 candidatos não informaram.
A maioria dos candidatos atuaram entre 4 e 6 anos em suas respectivas areas de atuação
	Tratamento 

No tratamento foi necessario renomear os nomes das series de todos os 3 datasets, em sequencia junta-las tento 1 dataframe.
Foi identificado valores nulos ou nao preenchidos nas colunas.
Nas colunas uf, idioma, pcd,status_contratação, genero, disponivel_viagens, disponivel_mudança, foi melhor preenche-los
com seus valores moda e na coluna data_inscricao mudou o type de object para datetime.
E nas series salario_vaga, pretenção_salarial, anos_experiencia, certificações, foi melhor preenche-los
com sua media e na coluna idade fi preenchida com a mediana.
A coluna nome foi reconhecido como nao util no tratamento.
Foi adicionado outro valores nas series, area_atuação e formação como 'Não informado'


Aula: 08/05

	IQR = É o intervo entre quartis onde há maior concretração de dados.
	Mediana = Normalmente é o quartil 50%
	Outliers = Dados que estao fora do padrão
	